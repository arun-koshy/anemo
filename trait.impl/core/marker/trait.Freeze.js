(function() {var implementors = {
"anemo":[["impl Freeze for <a class=\"struct\" href=\"anemo/struct.Config.html\" title=\"struct anemo::Config\">Config</a>",1,["anemo::config::Config"]],["impl Freeze for <a class=\"struct\" href=\"anemo/struct.QuicConfig.html\" title=\"struct anemo::QuicConfig\">QuicConfig</a>",1,["anemo::config::QuicConfig"]],["impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"anemo/middleware/add_extension/struct.AddExtensionLayer.html\" title=\"struct anemo::middleware::add_extension::AddExtensionLayer\">AddExtensionLayer</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: Freeze,</span>",1,["anemo::middleware::add_extension::AddExtensionLayer"]],["impl&lt;S, T&gt; Freeze for <a class=\"struct\" href=\"anemo/middleware/add_extension/struct.AddExtension.html\" title=\"struct anemo::middleware::add_extension::AddExtension\">AddExtension</a>&lt;S, T&gt;<span class=\"where fmt-newline\">where\n    S: Freeze,\n    T: Freeze,</span>",1,["anemo::middleware::add_extension::AddExtension"]],["impl&lt;In, T, U, E&gt; Freeze for <a class=\"struct\" href=\"anemo/middleware/box_clone_layer/struct.BoxCloneLayer.html\" title=\"struct anemo::middleware::box_clone_layer::BoxCloneLayer\">BoxCloneLayer</a>&lt;In, T, U, E&gt;",1,["anemo::middleware::box_clone_layer::BoxCloneLayer"]],["impl Freeze for <a class=\"struct\" href=\"anemo/struct.KnownPeers.html\" title=\"struct anemo::KnownPeers\">KnownPeers</a>",1,["anemo::network::connection_manager::KnownPeers"]],["impl Freeze for <a class=\"struct\" href=\"anemo/struct.Peer.html\" title=\"struct anemo::Peer\">Peer</a>",1,["anemo::network::peer::Peer"]],["impl Freeze for <a class=\"struct\" href=\"anemo/struct.Builder.html\" title=\"struct anemo::Builder\">Builder</a>",1,["anemo::network::Builder"]],["impl Freeze for <a class=\"struct\" href=\"anemo/struct.Network.html\" title=\"struct anemo::Network\">Network</a>",1,["anemo::network::Network"]],["impl Freeze for <a class=\"struct\" href=\"anemo/struct.NetworkRef.html\" title=\"struct anemo::NetworkRef\">NetworkRef</a>",1,["anemo::network::NetworkRef"]],["impl !Freeze for <a class=\"struct\" href=\"anemo/struct.Router.html\" title=\"struct anemo::Router\">Router</a>",1,["anemo::routing::Router"]],["impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"anemo/rpc/codec/struct.JsonCodec.html\" title=\"struct anemo::rpc::codec::JsonCodec\">JsonCodec</a>&lt;T, U&gt;",1,["anemo::rpc::codec::json::JsonCodec"]],["impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"anemo/rpc/codec/struct.BincodeCodec.html\" title=\"struct anemo::rpc::codec::BincodeCodec\">BincodeCodec</a>&lt;T, U&gt;",1,["anemo::rpc::codec::bincode::BincodeCodec"]],["impl Freeze for <a class=\"struct\" href=\"anemo/rpc/codec/struct.IdentityCodec.html\" title=\"struct anemo::rpc::codec::IdentityCodec\">IdentityCodec</a>",1,["anemo::rpc::codec::identity::IdentityCodec"]],["impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"anemo/rpc/client/struct.Rpc.html\" title=\"struct anemo::rpc::client::Rpc\">Rpc</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: Freeze,</span>",1,["anemo::rpc::client::Rpc"]],["impl&lt;T1, T2&gt; Freeze for <a class=\"struct\" href=\"anemo/rpc/server/struct.Rpc.html\" title=\"struct anemo::rpc::server::Rpc\">Rpc</a>&lt;T1, T2&gt;<span class=\"where fmt-newline\">where\n    T1: Freeze,\n    T2: Freeze,</span>",1,["anemo::rpc::server::Rpc"]],["impl Freeze for <a class=\"struct\" href=\"anemo/rpc/struct.Status.html\" title=\"struct anemo::rpc::Status\">Status</a>",1,["anemo::rpc::Status"]],["impl Freeze for <a class=\"enum\" href=\"anemo/types/enum.Address.html\" title=\"enum anemo::types::Address\">Address</a>",1,["anemo::types::address::Address"]],["impl Freeze for <a class=\"struct\" href=\"anemo/types/struct.PeerId.html\" title=\"struct anemo::types::PeerId\">PeerId</a>",1,["anemo::types::peer_id::PeerId"]],["impl Freeze for <a class=\"enum\" href=\"anemo/types/enum.Direction.html\" title=\"enum anemo::types::Direction\">Direction</a>",1,["anemo::types::peer_id::Direction"]],["impl Freeze for <a class=\"struct\" href=\"anemo/types/struct.ConnectionOrigin.html\" title=\"struct anemo::types::ConnectionOrigin\">ConnectionOrigin</a>",1,["anemo::types::peer_id::ConnectionOrigin"]],["impl Freeze for <a class=\"struct\" href=\"anemo/types/request/struct.RequestHeader.html\" title=\"struct anemo::types::request::RequestHeader\">RequestHeader</a>",1,["anemo::types::request::RequestHeader"]],["impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"anemo/struct.Request.html\" title=\"struct anemo::Request\">Request</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: Freeze,</span>",1,["anemo::types::request::Request"]],["impl Freeze for <a class=\"struct\" href=\"anemo/types/response/struct.ResponseHeader.html\" title=\"struct anemo::types::response::ResponseHeader\">ResponseHeader</a>",1,["anemo::types::response::ResponseHeader"]],["impl Freeze for <a class=\"enum\" href=\"anemo/types/response/enum.StatusCode.html\" title=\"enum anemo::types::response::StatusCode\">StatusCode</a>",1,["anemo::types::response::StatusCode"]],["impl Freeze for <a class=\"struct\" href=\"anemo/types/response/struct.InvalidStatusCodeError.html\" title=\"struct anemo::types::response::InvalidStatusCodeError\">InvalidStatusCodeError</a>",1,["anemo::types::response::InvalidStatusCodeError"]],["impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"anemo/struct.Response.html\" title=\"struct anemo::Response\">Response</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: Freeze,</span>",1,["anemo::types::response::Response"]],["impl Freeze for <a class=\"enum\" href=\"anemo/types/enum.Version.html\" title=\"enum anemo::types::Version\">Version</a>",1,["anemo::types::Version"]],["impl Freeze for <a class=\"enum\" href=\"anemo/types/enum.PeerAffinity.html\" title=\"enum anemo::types::PeerAffinity\">PeerAffinity</a>",1,["anemo::types::PeerAffinity"]],["impl Freeze for <a class=\"struct\" href=\"anemo/types/struct.PeerInfo.html\" title=\"struct anemo::types::PeerInfo\">PeerInfo</a>",1,["anemo::types::PeerInfo"]],["impl Freeze for <a class=\"enum\" href=\"anemo/types/enum.PeerEvent.html\" title=\"enum anemo::types::PeerEvent\">PeerEvent</a>",1,["anemo::types::PeerEvent"]],["impl Freeze for <a class=\"enum\" href=\"anemo/types/enum.DisconnectReason.html\" title=\"enum anemo::types::DisconnectReason\">DisconnectReason</a>",1,["anemo::types::DisconnectReason"]]],
"anemo_build":[["impl Freeze for <a class=\"struct\" href=\"anemo_build/manual/struct.ServiceBuilder.html\" title=\"struct anemo_build::manual::ServiceBuilder\">ServiceBuilder</a>",1,["anemo_build::manual::ServiceBuilder"]],["impl Freeze for <a class=\"struct\" href=\"anemo_build/manual/struct.Service.html\" title=\"struct anemo_build::manual::Service\">Service</a>",1,["anemo_build::manual::Service"]],["impl Freeze for <a class=\"struct\" href=\"anemo_build/manual/struct.Method.html\" title=\"struct anemo_build::manual::Method\">Method</a>",1,["anemo_build::manual::Method"]],["impl Freeze for <a class=\"struct\" href=\"anemo_build/manual/struct.MethodBuilder.html\" title=\"struct anemo_build::manual::MethodBuilder\">MethodBuilder</a>",1,["anemo_build::manual::MethodBuilder"]],["impl Freeze for <a class=\"struct\" href=\"anemo_build/manual/struct.Builder.html\" title=\"struct anemo_build::manual::Builder\">Builder</a>",1,["anemo_build::manual::Builder"]],["impl Freeze for <a class=\"struct\" href=\"anemo_build/struct.Attributes.html\" title=\"struct anemo_build::Attributes\">Attributes</a>",1,["anemo_build::Attributes"]]],
"anemo_cli":[["impl Freeze for <a class=\"struct\" href=\"anemo_cli/struct.Config.html\" title=\"struct anemo_cli::Config\">Config</a>",1,["anemo_cli::Config"]],["impl Freeze for <a class=\"struct\" href=\"anemo_cli/struct.ServiceInfo.html\" title=\"struct anemo_cli::ServiceInfo\">ServiceInfo</a>",1,["anemo_cli::ServiceInfo"]],["impl Freeze for <a class=\"struct\" href=\"anemo_cli/struct.Args.html\" title=\"struct anemo_cli::Args\">Args</a>",1,["anemo_cli::Args"]]],
"anemo_tower":[["impl&lt;F&gt; !Freeze for <a class=\"struct\" href=\"anemo_tower/auth/struct.ResponseFuture.html\" title=\"struct anemo_tower::auth::ResponseFuture\">ResponseFuture</a>&lt;F&gt;",1,["anemo_tower::auth::future::ResponseFuture"]],["impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"anemo_tower/auth/struct.RequireAuthorizationLayer.html\" title=\"struct anemo_tower::auth::RequireAuthorizationLayer\">RequireAuthorizationLayer</a>&lt;A&gt;<span class=\"where fmt-newline\">where\n    A: Freeze,</span>",1,["anemo_tower::auth::layer::RequireAuthorizationLayer"]],["impl&lt;S, A&gt; Freeze for <a class=\"struct\" href=\"anemo_tower/auth/struct.RequireAuthorization.html\" title=\"struct anemo_tower::auth::RequireAuthorization\">RequireAuthorization</a>&lt;S, A&gt;<span class=\"where fmt-newline\">where\n    A: Freeze,\n    S: Freeze,</span>",1,["anemo_tower::auth::service::RequireAuthorization"]],["impl Freeze for <a class=\"struct\" href=\"anemo_tower/auth/struct.AllowedPeers.html\" title=\"struct anemo_tower::auth::AllowedPeers\">AllowedPeers</a>",1,["anemo_tower::auth::AllowedPeers"]],["impl&lt;F, ResponseHandler&gt; Freeze for <a class=\"struct\" href=\"anemo_tower/callback/struct.ResponseFuture.html\" title=\"struct anemo_tower::callback::ResponseFuture\">ResponseFuture</a>&lt;F, ResponseHandler&gt;<span class=\"where fmt-newline\">where\n    F: Freeze,\n    ResponseHandler: Freeze,</span>",1,["anemo_tower::callback::future::ResponseFuture"]],["impl&lt;M&gt; Freeze for <a class=\"struct\" href=\"anemo_tower/callback/struct.CallbackLayer.html\" title=\"struct anemo_tower::callback::CallbackLayer\">CallbackLayer</a>&lt;M&gt;<span class=\"where fmt-newline\">where\n    M: Freeze,</span>",1,["anemo_tower::callback::layer::CallbackLayer"]],["impl&lt;S, M&gt; Freeze for <a class=\"struct\" href=\"anemo_tower/callback/struct.Callback.html\" title=\"struct anemo_tower::callback::Callback\">Callback</a>&lt;S, M&gt;<span class=\"where fmt-newline\">where\n    M: Freeze,\n    S: Freeze,</span>",1,["anemo_tower::callback::service::Callback"]],["impl Freeze for <a class=\"struct\" href=\"anemo_tower/classify/struct.StatusInRangeAsFailures.html\" title=\"struct anemo_tower::classify::StatusInRangeAsFailures\">StatusInRangeAsFailures</a>",1,["anemo_tower::classify::StatusInRangeAsFailures"]],["impl Freeze for <a class=\"enum\" href=\"anemo_tower/classify/enum.StatusInRangeFailureClass.html\" title=\"enum anemo_tower::classify::StatusInRangeFailureClass\">StatusInRangeFailureClass</a>",1,["anemo_tower::classify::StatusInRangeFailureClass"]],["impl Freeze for <a class=\"enum\" href=\"anemo_tower/inflight_limit/enum.WaitMode.html\" title=\"enum anemo_tower::inflight_limit::WaitMode\">WaitMode</a>",1,["anemo_tower::inflight_limit::WaitMode"]],["impl Freeze for <a class=\"struct\" href=\"anemo_tower/inflight_limit/struct.InflightLimitLayer.html\" title=\"struct anemo_tower::inflight_limit::InflightLimitLayer\">InflightLimitLayer</a>",1,["anemo_tower::inflight_limit::InflightLimitLayer"]],["impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"anemo_tower/inflight_limit/struct.InflightLimit.html\" title=\"struct anemo_tower::inflight_limit::InflightLimit\">InflightLimit</a>&lt;S&gt;<span class=\"where fmt-newline\">where\n    S: Freeze,</span>",1,["anemo_tower::inflight_limit::InflightLimit"]],["impl Freeze for <a class=\"enum\" href=\"anemo_tower/rate_limit/enum.WaitMode.html\" title=\"enum anemo_tower::rate_limit::WaitMode\">WaitMode</a>",1,["anemo_tower::rate_limit::WaitMode"]],["impl Freeze for <a class=\"struct\" href=\"anemo_tower/rate_limit/struct.RateLimitLayer.html\" title=\"struct anemo_tower::rate_limit::RateLimitLayer\">RateLimitLayer</a>",1,["anemo_tower::rate_limit::RateLimitLayer"]],["impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"anemo_tower/rate_limit/struct.RateLimit.html\" title=\"struct anemo_tower::rate_limit::RateLimit\">RateLimit</a>&lt;S&gt;<span class=\"where fmt-newline\">where\n    S: Freeze,</span>",1,["anemo_tower::rate_limit::RateLimit"]],["impl Freeze for <a class=\"struct\" href=\"anemo_tower/request_id/struct.RequestId.html\" title=\"struct anemo_tower::request_id::RequestId\">RequestId</a>",1,["anemo_tower::request_id::RequestId"]],["impl&lt;M&gt; Freeze for <a class=\"struct\" href=\"anemo_tower/request_id/struct.SetRequestIdLayer.html\" title=\"struct anemo_tower::request_id::SetRequestIdLayer\">SetRequestIdLayer</a>&lt;M&gt;<span class=\"where fmt-newline\">where\n    M: Freeze,</span>",1,["anemo_tower::request_id::SetRequestIdLayer"]],["impl&lt;S, M&gt; Freeze for <a class=\"struct\" href=\"anemo_tower/request_id/struct.SetRequestId.html\" title=\"struct anemo_tower::request_id::SetRequestId\">SetRequestId</a>&lt;S, M&gt;<span class=\"where fmt-newline\">where\n    M: Freeze,\n    S: Freeze,</span>",1,["anemo_tower::request_id::SetRequestId"]],["impl Freeze for <a class=\"struct\" href=\"anemo_tower/request_id/struct.PropagateRequestIdLayer.html\" title=\"struct anemo_tower::request_id::PropagateRequestIdLayer\">PropagateRequestIdLayer</a>",1,["anemo_tower::request_id::PropagateRequestIdLayer"]],["impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"anemo_tower/request_id/struct.PropagateRequestId.html\" title=\"struct anemo_tower::request_id::PropagateRequestId\">PropagateRequestId</a>&lt;S&gt;<span class=\"where fmt-newline\">where\n    S: Freeze,</span>",1,["anemo_tower::request_id::PropagateRequestId"]],["impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"anemo_tower/request_id/struct.PropagateRequestIdResponseFuture.html\" title=\"struct anemo_tower::request_id::PropagateRequestIdResponseFuture\">PropagateRequestIdResponseFuture</a>&lt;F&gt;<span class=\"where fmt-newline\">where\n    F: Freeze,</span>",1,["anemo_tower::request_id::PropagateRequestIdResponseFuture"]],["impl Freeze for <a class=\"struct\" href=\"anemo_tower/request_id/struct.MakeRequestUuid.html\" title=\"struct anemo_tower::request_id::MakeRequestUuid\">MakeRequestUuid</a>",1,["anemo_tower::request_id::MakeRequestUuid"]],["impl&lt;M&gt; Freeze for <a class=\"struct\" href=\"anemo_tower/set_header/struct.SetRequestHeaderLayer.html\" title=\"struct anemo_tower::set_header::SetRequestHeaderLayer\">SetRequestHeaderLayer</a>&lt;M&gt;<span class=\"where fmt-newline\">where\n    M: Freeze,</span>",1,["anemo_tower::set_header::request::SetRequestHeaderLayer"]],["impl&lt;S, M&gt; Freeze for <a class=\"struct\" href=\"anemo_tower/set_header/struct.SetRequestHeader.html\" title=\"struct anemo_tower::set_header::SetRequestHeader\">SetRequestHeader</a>&lt;S, M&gt;<span class=\"where fmt-newline\">where\n    M: Freeze,\n    S: Freeze,</span>",1,["anemo_tower::set_header::request::SetRequestHeader"]],["impl&lt;M&gt; Freeze for <a class=\"struct\" href=\"anemo_tower/set_header/struct.SetResponseHeaderLayer.html\" title=\"struct anemo_tower::set_header::SetResponseHeaderLayer\">SetResponseHeaderLayer</a>&lt;M&gt;<span class=\"where fmt-newline\">where\n    M: Freeze,</span>",1,["anemo_tower::set_header::response::SetResponseHeaderLayer"]],["impl&lt;S, M&gt; Freeze for <a class=\"struct\" href=\"anemo_tower/set_header/struct.SetResponseHeader.html\" title=\"struct anemo_tower::set_header::SetResponseHeader\">SetResponseHeader</a>&lt;S, M&gt;<span class=\"where fmt-newline\">where\n    M: Freeze,\n    S: Freeze,</span>",1,["anemo_tower::set_header::response::SetResponseHeader"]],["impl&lt;F, M&gt; Freeze for <a class=\"struct\" href=\"anemo_tower/set_header/response/struct.ResponseFuture.html\" title=\"struct anemo_tower::set_header::response::ResponseFuture\">ResponseFuture</a>&lt;F, M&gt;<span class=\"where fmt-newline\">where\n    F: Freeze,\n    M: Freeze,</span>",1,["anemo_tower::set_header::response::ResponseFuture"]],["impl&lt;F, Classifier, OnResponse, OnFailure&gt; Freeze for <a class=\"struct\" href=\"anemo_tower/trace/struct.ResponseFuture.html\" title=\"struct anemo_tower::trace::ResponseFuture\">ResponseFuture</a>&lt;F, Classifier, OnResponse, OnFailure&gt;<span class=\"where fmt-newline\">where\n    Classifier: Freeze,\n    F: Freeze,\n    OnFailure: Freeze,\n    OnResponse: Freeze,</span>",1,["anemo_tower::trace::future::ResponseFuture"]],["impl&lt;Classifier, MakeSpan, OnRequest, OnResponse, OnFailure&gt; Freeze for <a class=\"struct\" href=\"anemo_tower/trace/struct.TraceLayer.html\" title=\"struct anemo_tower::trace::TraceLayer\">TraceLayer</a>&lt;Classifier, MakeSpan, OnRequest, OnResponse, OnFailure&gt;<span class=\"where fmt-newline\">where\n    Classifier: Freeze,\n    MakeSpan: Freeze,\n    OnFailure: Freeze,\n    OnRequest: Freeze,\n    OnResponse: Freeze,</span>",1,["anemo_tower::trace::layer::TraceLayer"]],["impl Freeze for <a class=\"struct\" href=\"anemo_tower/trace/struct.DefaultMakeSpan.html\" title=\"struct anemo_tower::trace::DefaultMakeSpan\">DefaultMakeSpan</a>",1,["anemo_tower::trace::make_span::DefaultMakeSpan"]],["impl Freeze for <a class=\"struct\" href=\"anemo_tower/trace/struct.DefaultOnFailure.html\" title=\"struct anemo_tower::trace::DefaultOnFailure\">DefaultOnFailure</a>",1,["anemo_tower::trace::on_failure::DefaultOnFailure"]],["impl Freeze for <a class=\"struct\" href=\"anemo_tower/trace/struct.DefaultOnRequest.html\" title=\"struct anemo_tower::trace::DefaultOnRequest\">DefaultOnRequest</a>",1,["anemo_tower::trace::on_request::DefaultOnRequest"]],["impl Freeze for <a class=\"struct\" href=\"anemo_tower/trace/struct.DefaultOnResponse.html\" title=\"struct anemo_tower::trace::DefaultOnResponse\">DefaultOnResponse</a>",1,["anemo_tower::trace::on_response::DefaultOnResponse"]],["impl&lt;S, Classifier, MakeSpan, OnRequest, OnResponse, OnFailure&gt; Freeze for <a class=\"struct\" href=\"anemo_tower/trace/struct.Trace.html\" title=\"struct anemo_tower::trace::Trace\">Trace</a>&lt;S, Classifier, MakeSpan, OnRequest, OnResponse, OnFailure&gt;<span class=\"where fmt-newline\">where\n    Classifier: Freeze,\n    MakeSpan: Freeze,\n    OnFailure: Freeze,\n    OnRequest: Freeze,\n    OnResponse: Freeze,\n    S: Freeze,</span>",1,["anemo_tower::trace::service::Trace"]],["impl Freeze for <a class=\"enum\" href=\"anemo_tower/enum.LatencyUnit.html\" title=\"enum anemo_tower::LatencyUnit\">LatencyUnit</a>",1,["anemo_tower::LatencyUnit"]]],
"examples":[["impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"examples/greeter/greeter_client/struct.GreeterClient.html\" title=\"struct examples::greeter::greeter_client::GreeterClient\">GreeterClient</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: Freeze,</span>",1,["examples::greeter::greeter_client::GreeterClient"]],["impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"examples/greeter/greeter_server/struct.GreeterServer.html\" title=\"struct examples::greeter::greeter_server::GreeterServer\">GreeterServer</a>&lt;T&gt;",1,["examples::greeter::greeter_server::GreeterServer"]],["impl Freeze for <a class=\"struct\" href=\"examples/struct.HelloRequest.html\" title=\"struct examples::HelloRequest\">HelloRequest</a>",1,["examples::HelloRequest"]],["impl Freeze for <a class=\"struct\" href=\"examples/struct.HelloResponse.html\" title=\"struct examples::HelloResponse\">HelloResponse</a>",1,["examples::HelloResponse"]],["impl Freeze for <a class=\"struct\" href=\"examples/struct.MyGreeter.html\" title=\"struct examples::MyGreeter\">MyGreeter</a>",1,["examples::MyGreeter"]]],
"greeter_cli":[["impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"greeter_cli/greeter/greeter_client/struct.GreeterClient.html\" title=\"struct greeter_cli::greeter::greeter_client::GreeterClient\">GreeterClient</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a>,</span>",1,["greeter_cli::greeter::greeter_client::GreeterClient"]],["impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"greeter_cli/greeter/greeter_server/struct.GreeterServer.html\" title=\"struct greeter_cli::greeter::greeter_server::GreeterServer\">GreeterServer</a>&lt;T&gt;",1,["greeter_cli::greeter::greeter_server::GreeterServer"]],["impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"greeter_cli/greeter/greeter_server/struct.SayHelloSvc.html\" title=\"struct greeter_cli::greeter::greeter_server::SayHelloSvc\">SayHelloSvc</a>&lt;T&gt;",1,["greeter_cli::greeter::greeter_server::SayHelloSvc"]]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()